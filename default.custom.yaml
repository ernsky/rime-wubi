# Rime settings
# encoding: utf-8
# date: 2024-05-27

config_version: '2024-12-19'

customization:
  distribution_code_name: Weasel
  distribution_version: 0.16.3
  generator: "Rime::SwitcherSettings"
  modified_time: "Fri Nov  8 09:43:10 2024"
  rime_version: 1.11.2
patch:
  schema_list:             #  方案列表
    - schema: wubi         #  五笔86
    - schema: rime_ice     #  雾凇拼音

  switcher:
    caption: "【 输入法设置 】"
    hotkeys: 
     #- F4
      - Control+0
     #- Alt+grave
    option_list_separator: "｜"
    save_options:  # 开关记忆（方案中的 switches），从方案选单（而非快捷键）切换时会记住的选项，需要记忆的开关不能设定 reset
      - ascii_punct
      - traditionalization
      - emoji
      - full_shape
    fold_options: true            # 呼出时是否折叠，多方案时建议折叠 true ，一个方案建议展开 false
    abbreviate_options: true      # 折叠时是否缩写选项
    option_list_separator: ' / '  # 折叠时的选项分隔符

  ascii_composer:
    good_old_caps_lock: true # true   切换大写；false  切换中英
    # commit_code：上屏原始的编码，然后切换到英文；commit_text：上屏拼出的词句，然后切换到英文；clear：清除未上屏内容，然后切换到英文；inline_ascii：切换到临时英文模式，按回车上屏后回到中文状态；noop：屏蔽快捷键，不切换中英，但不要屏蔽 CapsLock
    switch_key:         
      Caps_Lock: clear        # commit_code | commit_text | clear
      Control_L: noop
      Control_R: noop
      Shift_L: inline_ascii   # Shift_L	左Shift
      Shift_R: noop           # Shift_R	右Shift

# 快捷键

  key_binder:
    bindings: 
      - {accept: semicolon, send: 2, when: has_menu}  # ； 选择第二项上屏
      - {accept: apostrophe, send: 3, when: has_menu} # ’  选择第三项上屏
      - {accept: Return, send: Shift+Enter, when: composing}   # 回车字母上屏，无需则换成（Escape）
      - { when: has_menu, accept: Shift+Tab, send: Page_Up }   # Shift+Tab，向上翻页
      - { when: has_menu, accept: Tab, send: Page_Down }       # Tab，向下翻页
      - { when: always, accept: Control+Shift+3, toggle: ascii_punct }           # 切换中英标点
      - { when: always, accept: Control+semicolon, toggle: ascii_punct }           # 切换中英标点Ctrl+；
      - { when: always, accept: Control+Shift+4, toggle: traditionalization }    # 切换简繁
      #- { when: composing, accept: Tab, send: Control+BackSpace } #Tab撤消末位编码
      #- { when: composing, accept: semicolon, send: Control+BackSpace } #分号撤消末位编码
      #- { when: composing, accept: "z", send: Control+BackSpace } #z键还用于补码、拼音，故不作为撤消键
      #- { when: has_menu, accept: period, send: Page_Up }  # 。上翻页
      #- { when: has_menu, accept: comma, send: Page_Down } # ，下翻页
      #- {accept: bracketleft, send: Page_Up, when: has_menu}     # [ 上翻页
      #- {accept: bracketright, send: Page_Down, when: has_menu}  # ] 上翻页
      #- {accept: "Control+p", send: Up, when: composing}
      #- {accept: "Control+n", send: Down, when: composing}
      #- {accept: "Control+b", send: Left, when: composing}
      #- {accept: "Control+f", send: Right, when: composing}
      #- {accept: "Control+a", send: Home, when: composing}
      #- {accept: "Control+e", send: End, when: composing}
      #- {accept: "Control+d", send: Delete, when: composing}
      #- {accept: "Control+k", send: "Shift+Delete", when: composing}
      #- {accept: "Control+h", send: BackSpace, when: composing}
      #- {accept: "Control+g", send: Escape, when: composing}
      #- {accept: "Control+bracketleft", send: Escape, when: composing}
      #- {accept: "Alt+v", send: Page_Up, when: composing}
      #- {accept: "Control+v", send: Page_Down, when: composing}

  menu:
    page_size: 5 # 每页候选项显示5个
    #alternative_select_labels: [ ❶, ❷, ❸, ❹, ❺, ❻, ❼, ❽, ❾, ❿ ]  # 修改候选项标签
    
# 下面的 punctuator recognizer key_binder 写了一些所有方案通用的配置项。
# 写在 default.yaml 里，方便多个方案引用，就是不用每个方案都写一遍了。

# 标点符号
# 设置为一个映射，就自动上屏；设置为多个映射，如 '/' : [ '/', ÷ ] 则进行复选。
#   full_shape: 全角没改，使用预设值
#   half_shape: 标点符号全部直接上屏，和 macOS 自带输入法的区别是
#              '|' 是半角的，
#              '~' 是半角的，
#              '`'（反引号）没有改成 '·'（间隔号）。

  punctuator:
    full_shape:
      ' ' : { commit: '　' }
      ',' : { commit: ， }
      '.' : { commit: 。 }
      '<' : [ 《, 〈, «, ‹ ]
      '>' : [ 》, 〉, », › ]
      '/' : [ ／, ÷ ]
      '?' : { commit: ？ }
      ';' : { commit: ； }
      ':' : { commit: ： }
      '''' : { pair: [ '‘', '’' ] }
      '"' : { pair: [ '“', '”' ] }
      '\' : [ 、, ＼ ]
      '|' : [ ·, ｜, '§', '¦' ]
      '`' : ｀
      '~' : ～
      '!' : { commit: ！ }
      '@' : [ ＠, ☯ ]
      '#' : [ ＃, ⌘ ]
      '%' : [ ％, '°', '℃' ]
      '$' : [ ￥, '$', '€', '£', '¥', '¢', '¤' ]
      '^' : { commit: …… }
      '&' : ＆
      '*' : [ ＊, ·, ・, ×, ※, ❂ ]
      '(' : （
      ')' : ）
      '-' : －
      '_' : ——
      '+' : ＋
      '=' : ＝
      '[' : [ 「, 【, 〔, ［ ]
      ']' : [ 」, 】, 〕, ］ ]
      '{' : [ 『, 〖, ｛ ]
      '}' : [ 』, 〗, ｝ ]
    half_shape:
      ',' : '，'
      '.' : '。'
      '<' : '《'
      '>' : '》'
      '/' : '/'
      '?' : '？'
      ';' : '；'
      ':' : '：'
      '''' : { pair: [ '‘', '’' ] }
      '"' : { pair: [ '“', '”' ] }
      '\' : '、'
      '|' : '|'
      '`' : '`'
      '~' : '~'
      '!' : '！'
      '@' : '@'
      '#' : '#'
      '%' : '%'
      '$' : '¥'
      '^' : '……'
      '&' : '&'
      '*' : '*'
      '(' : '（'
      ')' : '）'
      '-' : '-'
      '_' : ——
      '+' : '+'
      '=' : '='
      '[' : '【'
      ']' : '】'
      '{' : '「'
      '}' : '」'
  recognizer:
    patterns:
      #punct: "^/([0-9]0?|[A-Za-z]+)$"
      email: "^[A-Za-z][-_.0-9A-Za-z]*@.*$"                            # email @ 之后不上屏
      url: "^(www[.]|https?:|ftp[.:]|mailto:|file:).*$|^[a-z]+[.].+$"  # URL
      #url_2: "^[A-Za-z]+[.].*"     # 句号不上屏，支持 google.com abc.txt 等网址或文件名，使用句号翻页时需要注释掉
      #colon: "^[A-Za-z]+:.*"       # 冒号不上屏
      #underscore: "^[A-Za-z]+_.*"  # 下划线不上屏
      uppercase: "[A-Z][-_+.'0-9A-Za-z]*$"  # 自带的，大写字母开头后，可以输入[-_+.'0-9A-Za-z]这些字符（和雾凇有些冲突，关闭了）
